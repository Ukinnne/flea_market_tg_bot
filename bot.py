from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from dotenv import load_dotenv
import os
import asyncio

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

dp = Dispatcher()

@dp.message(Command("start"))
async def start(message: types.Message):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º \n –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ –≤–º–µ—Å—Ç–æ <br>
    await message.answer(
        "<b>üåü –ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∂–æ–∫!</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç ‚Äî —Ç–≤–æ–π —É–¥–æ–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–∫—É–ø–æ–∫ –∏ –ø—Ä–æ–¥–∞–∂ –ø—Ä—è–º–æ –≤ Telegram! üõçÔ∏èüí∞\n\n"
        "<b>–ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å?</b>\n"
        "‚úÖ <b>–ü—Ä–æ–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –≤–µ—â–∏</b> ‚Äî –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ö–ª–æ–ø–æ—Ç!\n"
        "‚úÖ <b>–ü–æ–∫—É–ø–∞—Ç—å –∫–ª–∞—Å—Å–Ω—ã–µ —à—Ç—É–∫–∏</b> —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Äî –≤—ã–≥–æ–¥–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ!\n\n"
        "üîπ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ /help ‚Äî —Ç–∞–º –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ! üòä\n\n"
        "<b>–î–∞–≤–∞–π –Ω–∞—á–∏–Ω–∞—Ç—å!</b> üöÄ –¢–µ–ø–µ—Ä—å —Ç–≤–æ–∏ –Ω–µ–Ω—É–∂–Ω—ã–µ –≤–µ—â–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏, –∞ –Ω–∞–π—Ç–∏ —á—Ç–æ-—Ç–æ –∫—Ä—É—Ç–æ–µ ‚Äî –ø—Ä–æ—â–µ –ø—Ä–æ—Å—Ç–æ–≥–æ!"
    )

@dp.message(Command("help"))
async def help_command(message: types.Message):
    await message.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())